var b=function(y,e){if(e=e||{},typeof y!="function")throw new i("fetch must be a function");if(typeof e!="object")throw new i("defaults must be an object");if(e.retries!==void 0&&!c(e.retries))throw new i("retries must be a positive integer");if(e.retryDelay!==void 0&&!c(e.retryDelay)&&typeof e.retryDelay!="function")throw new i("retryDelay must be a positive integer or a function returning a positive integer");if(e.retryOn!==void 0&&!Array.isArray(e.retryOn)&&typeof e.retryOn!="function")throw new i("retryOn property expects an array or function");var h={retries:3,retryDelay:1e3,retryOn:[]};return e=Object.assign(h,e),function(g,r){var a=e.retries,f=e.retryDelay,o=e.retryOn;if(r&&r.retries!==void 0)if(c(r.retries))a=r.retries;else throw new i("retries must be a positive integer");if(r&&r.retryDelay!==void 0)if(c(r.retryDelay)||typeof r.retryDelay=="function")f=r.retryDelay;else throw new i("retryDelay must be a positive integer or a function returning a positive integer");if(r&&r.retryOn)if(Array.isArray(r.retryOn)||typeof r.retryOn=="function")o=r.retryOn;else throw new i("retryOn property expects an array or function");return new Promise(function(s,l){var w=function(t){y(g,r).then(function(n){Array.isArray(o)&&o.indexOf(n.status)===-1?s(n):typeof o=="function"?o(t,null,n)?u(t,null,n):s(n):t<a?u(t,null,n):s(n)}).catch(function(n){typeof o=="function"?o(t,n,null)?u(t,n,null):l(n):t<a?u(t,n,null):l(n)})};function u(t,n,O){var D=typeof f=="function"?f(t,n,O):f;setTimeout(function(){w(++t)},D)}w(0)})}};function c(y){return Number.isInteger(y)&&y>=0}function i(y){this.name="ArgumentError",this.message=y}export default b;
